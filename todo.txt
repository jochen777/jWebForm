 * - submit button (OK)
 * - simple input-element (OK)
 * - validate elements (OK)
 * - preset elements (OK)
 * - elements should expose a model (OK)
 *  check if complete form is valid (OK)
 * - Formvalidator (OK)
 * - tabindex(OK)
 * placeholder (OK)
 * - komplex input-form (OK)
  * set internal value (OK)
  * validate date (OK)
  * korrect validation-display for date (OK)
 
 * - xsrf (OK)
 
 * - firstRun? / * - form-id (mehrere forms pro Seite!. Entscheidung: edited=1 oder form-element-ids. (Symfony: form-element-ids - vielleicht diese optional machen - also nur einsetzen, wenn zwei Forms am start sind?) (OK)
 
 * Refactor and extend test (date, xsrf-protection) (OK)
 * idee: Die GetHTML Methode bekommt erst den Request und macht dann das nötige. nicht schon der Konstruktor. (OK)
 * Idee: ElementResult bekommt nicht html-string, sondern render-objekt (OK)
 
 * Everything immutable! (OK)
 * test 2 forms on the same page. (OK)
 * REFACTORINGS!! (RenderHints (OK), Decoration (OK))
 * fix form-result
 * introduce custom validator, that set the xsrf protection to okay for testing!
 
 * could Element be immutable or the others too? (OK)
 * - maxLen (via request??)
 * - different themes: via: Each element has a hash of renderers. Hash has always "default", but can have more (bootstrap, mobile...)
 *   - you can add a set of renderers to a form to style differently
 * custom filters for request (max-len...)
 
## Nüsse:

* Tabindex (OK)
* Wie kann man einen Fehler setzen? (z.B. ein FormularValidtorar... PW) (OK)
* Wie kann Captcha den Submit-Button ädnern? -> Es braucht einen modifizierten Submit-Button dafür. Also etwa: CatpachSubmit()


* Wie kann man mit einer Zeile ein ganzes Theme ändern?
* Wie bekommt man _wrapper_ oder neuandordnungen hin?
* Wie kann das Themening im Template aussehen?
* Wie kann ein FormularRenderer die Anordnung der Inputs beeinflussen?


 